{"version":3,"sources":["webpack:///./src/app/assign-school/assign-school.component.css","webpack:///./src/app/assign-school/assign-school.component.html","webpack:///./src/app/assign-school/assign-school.component.ts","webpack:///./src/app/assign-school/assign-school.module.ts","webpack:///./src/app/assign-school/form-assign-school.component.html","webpack:///./src/app/assign-school/form-assign-school.component.ts"],"names":[],"mappings":"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","file":"assign-school-assign-school-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2lnbi1zY2hvb2wvYXNzaWduLXNjaG9vbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content-header\\\">\\n      <h1>\\n        Assign School\\n      </h1>\\n    </section>\\n    <section class=\\\"content\\\">\\n      <div class=\\\"box\\\">\\n        <div class=\\\"box-header\\\">\\n          <h3 class=\\\"box-title\\\">Assign School Listing</h3>\\n          <a uiSref=\\\"app.assign-school-add\\\" style=\\\"float:right;width:auto;margin:0px 1px;\\\"\\n            class=\\\"btn btn-block btn-primary btn-flat\\\">Add\\n            Assign School</a>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n          <div *ngIf=\\\"assignschools.length === 0\\\">{{notfound}}</div>\\n          <div *ngIf=\\\"assignschools.length > 0\\\">\\n              <table class=\\\"table table-bordered table-striped\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>School Name</th>\\n                      <th>Class Name</th>\\n                      <th>Book Name</th>\\n                      <th>Action</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let assignschools_new of assignschools | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\n                      <td>{{ assignschools_new.school_id.school_name }}</td>\\n                      <td>{{ assignschools_new.class_id.class_name }}</td>\\n                      <td>{{ assignschools_new.book_id.book_name }}</td>\\n                      <td>\\n                        <a style=\\\"text-decoration: none; color: blue;\\\" uiSref=\\\"app.assign-school-update\\\" [uiParams]=\\\"{ id : assignschools_new._id }\\\" class=\\\"fa fa-edit\\\"></a>\\n                        <a style=\\\"margin-left: 10px; cursor: pointer; color: red;\\\" class=\\\"fa fa-trash\\\" (click)=\\\"deleteAssignSchool(assignschools_new._id)\\\"></a>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <br>\\n                <pagination-controls style=\\\"float: right;\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { UIRouter } from \"@uirouter/angular\";\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from '../common.service';\nimport { AssignSchoolService } from '../services/assign-school/assign-school.service'\n\n@Component({\n  selector: 'app-assign-school',\n  templateUrl: './assign-school.component.html',\n  styleUrls: ['./assign-school.component.css']\n})\nexport class AssignSchoolComponent implements OnInit {\n\n  assignschools: any = [];\n  notfound: any;\n\n  constructor(private router: UIRouter, private toastr: ToastrService, private commonServ: CommonService, private AssignSchoolService: AssignSchoolService) { }\n\n  ngOnInit() {\n    if (this.commonServ.rootData.currentUser != undefined) {\n      this.getAssignSchoolList();\n    }\n  }\n\n  getAssignSchoolList(){\n    this.AssignSchoolService.getAssignSchool().subscribe((res:any) => {\n      if(res.data.length > 0){\n        this.assignschools = res.data;\n        // console.log(\"this\", this.subjects);\n      } else {\n        this.notfound = \"Record Not Found\";\n      }\n    })\n  }\n\n  deleteAssignSchool(id){\n    this.AssignSchoolService.deleteAssignSchool(id).subscribe((res: any) => {\n      if(res.status == 1) {\n        this.getAssignSchoolList();\n        this.toastr.success('Subject deleted successfully');\n      } else {\n        // console.log(res.message);\n        this.toastr.error('Error while deleting the subject');\n      }\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AssignSchoolComponent } from './assign-school.component';\nimport { FormAssignSchoolComponent } from './form-assign-school.component';\nimport { UIRouterModule } from \"@uirouter/angular\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { Ng2StateDeclaration, Transition } from \"@uirouter/angular\";\n\nimport { EmptyModule } from '../empty/empty.module';\nimport { EmptyComponent } from '../empty/empty.component';\n\nlet APP_SUB_STATES: Ng2StateDeclaration[] = [\n  // A state for the 'app.contact' submodule.\n  {\n    name: \"app.assign-school\",\n    url: \"/admins/assign-school\",\n    views: {\n      \"content@\": { component: AssignSchoolComponent },\n    },\n  },\n  {\n    name: \"app.assign-school-add\",\n    url: \"/admins/assign-school/add\",\n    views: {\n      \"content@\": { component: FormAssignSchoolComponent },\n    },\n  },\n  {\n    name: \"app.assign-school-update\",\n    url: \"/admins/assign-school/update/:id\",\n    views: {\n      \"content@\": { component: FormAssignSchoolComponent },\n    },\n  }\n];\n\n@NgModule({\n  declarations: [AssignSchoolComponent, FormAssignSchoolComponent],\n  imports: [\n    CommonModule,\n    EmptyModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UIRouterModule.forChild({ states: APP_SUB_STATES }),\n    NgxPaginationModule\n  ]\n})\nexport class AssignSchoolModule { }\n","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <!-- Content Header (Page header) -->\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      Assign School\\n    </h1>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header\\\">\\n        <h3 class=\\\"box-title\\\">{{title_header}}</h3>\\n      </div>\\n      <form [formGroup]=\\\"rForm\\\" (ngSubmit)=\\\"addAssignSchool(rForm.value)\\\" class=\\\"form-horizontal\\\">\\n        <div class=\\\"box-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"school_id\\\" class=\\\"col-sm-2 control-label\\\">School\\n                </label>\\n                <div class=\\\"col-sm-4\\\">\\n                  <select class=\\\"form-control\\\" formControlName=\\\"school_id\\\" ngModel=\\\"{{getoneassignschool.school_id}}\\\">\\n                    <option value=\\\"\\\">Select School</option>\\n                    <option *ngFor=\\\"let school_new of school\\\" value=\\\"{{school_new._id}}\\\">{{school_new.school_name}}</option>\\n                  </select>\\n                </div>\\n              \\n                <div\\n                  *ngIf=\\\"rForm.controls['school_id'].invalid && (rForm.controls['school_id'].dirty || rForm.controls['school_id'].touched)\\\"\\n                  class=\\\"col-sm-4 text-danger\\\">\\n                  <div *ngIf=\\\"rForm.controls['school_id'].errors?.required\\\">\\n                    Select School\\n                  </div>\\n                </div>\\n              </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"class_id\\\" class=\\\"col-sm-2 control-label\\\">Class\\n                </label>\\n                <div class=\\\"col-sm-4\\\">\\n                  <select class=\\\"form-control\\\" formControlName=\\\"class_id\\\" ngModel=\\\"{{getoneassignschool.class_id}}\\\">\\n                    <option value=\\\"\\\">Select Class</option>\\n                    <option *ngFor=\\\"let classes_new of class\\\" value=\\\"{{classes_new._id}}\\\">{{classes_new.class_name}}</option>\\n                  </select>\\n                </div>\\n              \\n                <div\\n                  *ngIf=\\\"rForm.controls['class_id'].invalid && (rForm.controls['class_id'].dirty || rForm.controls['class_id'].touched)\\\"\\n                  class=\\\"col-sm-4 text-danger\\\">\\n                  <div *ngIf=\\\"rForm.controls['class_id'].errors?.required\\\">\\n                    Select Class\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"book_id\\\" class=\\\"col-sm-2 control-label\\\">Book\\n                  </label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <select class=\\\"form-control\\\" formControlName=\\\"book_id\\\" ngModel=\\\"{{getoneassignschool.book_id}}\\\">\\n                      <option value=\\\"\\\">Select Book</option>\\n                      <option *ngFor=\\\"let books_new of books\\\" value=\\\"{{books_new._id}}\\\">{{books_new.book_name}}</option>\\n                    </select>\\n                  </div>\\n                \\n                  <div\\n                    *ngIf=\\\"rForm.controls['book_id'].invalid && (rForm.controls['book_id'].dirty || rForm.controls['book_id'].touched)\\\"\\n                    class=\\\"col-sm-4 text-danger\\\">\\n                    <div *ngIf=\\\"rForm.controls['book_id'].errors?.required\\\">\\n                      Select Book\\n                    </div>\\n                  </div>\\n                </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-offset-2 col-sm-9\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{title_button}}</button>\\n                    <a style=\\\"margin-left: 10px;\\\" class=\\\"btn btn-danger\\\" uiSref=\\\"app.assign-school\\\">Cancel</a>\\n                </div>\\n              </div>\\n\\n        </div>\\n          </form>\\n        </div>\\n          </section>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UIRouter } from \"@uirouter/angular\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from '../common.service';\nimport { SchoolService } from '../services/school/school.service';\nimport { ClassService } from '../services/class/class.service';\nimport { SubjectService } from '../services/subject/subject.service';\nimport { AssignSchoolService } from '../services/assign-school/assign-school.service';\n\n@Component({\n  selector: 'app-form-assign-school',\n  templateUrl: './form-assign-school.component.html',\n  // styleUrls: ['./assign-school.component.css']\n})\nexport class FormAssignSchoolComponent implements OnInit {\n\n  rForm: FormGroup;\n  school: any = [];\n  class: any = [];\n  books: any = [];\n  title_button: any;\n  title_header: any;\n  getoneassignschool: any = [];\n\n  constructor(private router: UIRouter, private AssignSchoolService: AssignSchoolService, private ClassService: ClassService, private SubjectService: SubjectService, private SchoolService: SchoolService, private commonServ: CommonService, private toastr: ToastrService, private fb: FormBuilder) {\n    this.rForm = fb.group({\n      'school_id': ['', Validators.required],\n      'class_id': ['', Validators.required],\n      'book_id': ['', Validators.required]\n    });\n   }\n\n  ngOnInit() {\n    if (this.commonServ.rootData === undefined || this.commonServ.rootData.currentUser === undefined) {\n      this.router.stateService.go('app.login');\n    }\n\n    this.title_header = 'Add Assign School';\n    this.title_button = 'Submit';\n    this.getSchool();\n    this.getClass();\n    this.getBook();\n    if (this.router.stateService.params.id != undefined) {\n      this.title_header = 'Update Assign School';\n      this.title_button = 'Update';\n      this.AssignSchoolService.getOneAssignSchool(this.router.stateService.params.id).subscribe((res: any) => {\n        this.getoneassignschool = res.data;\n      })\n    }\n  }\n\n  getSchool(){\n    this.SchoolService.getSchool().subscribe((res: any) => {\n      this.school = res.data;\n    })\n  }\n\n  getClass(){\n    this.ClassService.getClass().subscribe((res: any) => {\n      this.class = res.data;\n    })\n  }\n\n  getBook(){\n    this.SubjectService.getSubject().subscribe((res: any) => {\n      this.books = res.data;\n    })\n  }\n\n  addAssignSchool(rForm){\n    if(this.rForm.valid){\n      if(this.router.stateService.params.id != undefined){\n        rForm.id = this.router.stateService.params.id;\n        this.AssignSchoolService.updateAssignSchool(rForm).subscribe((res: any) => {\n          if (res.status == 1) {\n            this.toastr.success('Assign School updated successfully');\n            this.router.stateService.go('app.assign-school');\n          } else {\n            this.toastr.error('Error while updating the assign school');\n            this.router.stateService.go('app.assign-school');\n          }\n        })\n      } else {\n        this.AssignSchoolService.addAssignSchool(rForm).subscribe((res: any) => {\n          if (res.status == 1) {\n            this.toastr.success('Assign School added successfully');\n            this.router.stateService.go('app.assign-school');\n          } else {\n            this.toastr.error('Error while adding the assign school');\n            this.router.stateService.go('app.assign-school');\n          }\n        })\n      }\n    } else {\n      Object.keys(this.rForm.controls).forEach(field => {\n        const control = this.rForm.get(field);\n        control.markAsTouched({ onlySelf: true });\n      });\n    }\n  }\n\n}\n"],"sourceRoot":""}