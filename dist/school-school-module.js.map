{"version":3,"sources":["webpack:///./src/app/school/form-school.component.html","webpack:///./src/app/school/form-school.component.ts","webpack:///./src/app/school/school.component.css","webpack:///./src/app/school/school.component.html","webpack:///./src/app/school/school.component.ts","webpack:///./src/app/school/school.module.ts"],"names":[],"mappings":"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","file":"school-school-module.js","sourcesContent":["module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <!-- Content Header (Page header) -->\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      Manage School\\n    </h1>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header\\\">\\n        <h3 class=\\\"box-title\\\">{{title_header}}</h3>\\n      </div>\\n      <form [formGroup]=\\\"rForm\\\" (ngSubmit)=\\\"addSchool(rForm.value)\\\" class=\\\"form-horizontal\\\">\\n        <div class=\\\"box-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"school_name\\\" class=\\\"col-sm-2 control-label\\\">School/Institute\\n            </label>\\n            <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"school_name\\\" ngModel=\\\"{{getoneschool.school_name}}\\\" class=\\\"form-control\\\" id=\\\"school_name\\\" autocomplete=\\\"off\\\">\\n            </div>\\n\\n            <div\\n              *ngIf=\\\"rForm.controls['school_name'].invalid && (rForm.controls['school_name'].dirty || rForm.controls['school_name'].touched)\\\"\\n              class=\\\"col-sm-4 text-danger\\\" style=\\\"margin-top: 10px; text-align: center;\\\">\\n\\n              <div *ngIf=\\\"rForm.controls['school_name'].errors.required\\\">\\n                Enter your School/Institute\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"school_mobile_number\\\" class=\\\"col-sm-2 control-label\\\">Mobile Number\\n            </label>\\n            <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"school_mobile_number\\\" ngModel=\\\"{{getoneschool.school_mobile_number}}\\\" class=\\\"form-control\\\" id=\\\"school_mobile_number\\\" autocomplete=\\\"off\\\" maxlength=\\\"10\\\">\\n            </div>\\n\\n            <div\\n              *ngIf=\\\"rForm.controls['school_mobile_number'].invalid && (rForm.controls['school_mobile_number'].dirty || rForm.controls['school_mobile_number'].touched)\\\"\\n              class=\\\"col-sm-4 text-danger\\\" style=\\\"margin-top: 10px; text-align: center;\\\">\\n\\n              <div *ngIf=\\\"rForm.controls['school_mobile_number'].errors.required\\\">\\n                Enter Mobile Number\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"address\\\" class=\\\"col-sm-2 control-label\\\">Address\\n            </label>\\n            <div class=\\\"col-sm-6\\\">\\n              <textarea type=\\\"text\\\" formControlName=\\\"address\\\" ngModel=\\\"{{getoneschool.address}}\\\" class=\\\"form-control\\\" id=\\\"address\\\" autocomplete=\\\"off\\\"></textarea>\\n            </div>\\n\\n            <div\\n              *ngIf=\\\"rForm.controls['address'].invalid && (rForm.controls['address'].dirty || rForm.controls['address'].touched)\\\"\\n              class=\\\"col-sm-4 text-danger\\\" style=\\\"margin-top: 10px; text-align: center;\\\">\\n\\n              <div *ngIf=\\\"rForm.controls['address'].errors.required\\\">\\n                Enter your Address\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"pincode\\\" class=\\\"col-sm-2 control-label\\\">Pincode\\n            </label>\\n            <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"pincode\\\" maxlength=\\\"6\\\" formControlName=\\\"pincode\\\" ngModel=\\\"{{getoneschool.pincode}}\\\" class=\\\"form-control\\\" id=\\\"pincode\\\" autocomplete=\\\"off\\\">\\n            </div>\\n\\n            <div\\n              *ngIf=\\\"rForm.controls['pincode'].invalid && (rForm.controls['pincode'].dirty || rForm.controls['pincode'].touched)\\\"\\n              class=\\\"col-sm-4 text-danger\\\" style=\\\"margin-top: 10px; text-align: center;\\\">\\n\\n              <div *ngIf=\\\"rForm.controls['pincode'].errors.required\\\">\\n                Enter your Pincode\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rewards_type\\\" class=\\\"col-sm-2 control-label\\\">Rewards</label>\\n            <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"radio\\\" formControlName=\\\"rewards_type\\\" value=\\\"For School\\\" ngModel=\\\"{{getoneschool.rewards_type}}\\\">\\n              For School\\n              <input type=\\\"radio\\\" formControlName=\\\"rewards_type\\\" value=\\\"For Student\\\" ngModel=\\\"{{getoneschool.rewards_type}}\\\">\\n              For Student\\n              <br>\\n            </div>\\n\\n            <div\\n              *ngIf=\\\"rForm.controls['rewards_type'].invalid && (rForm.controls['rewards_type'].dirty || rForm.controls['rewards_type'].touched)\\\"\\n              class=\\\"text-danger\\\">\\n              <div *ngIf=\\\"rForm.controls['rewards_type'].errors?.required\\\">\\n                Select Rewards\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" *ngIf=\\\"router.stateService.params.id\\\">\\n            <label for=\\\"school_logo\\\" class=\\\"col-sm-2 control-label\\\">School Logo</label>\\n            <div class=\\\"col-sm-4\\\">\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"school_logo\\\" formControlName=\\\"school_logo\\\">\\n              <!-- <input type=\\\"hidden\\\" class=\\\"form-control\\\" id=\\\"profile_image_hidden\\\" formControlName=\\\"profile_image\\\"\\n                ngModel={{users.profile_image}}> -->\\n              <input type=\\\"hidden\\\" class=\\\"form-control\\\" id=\\\"school_logo_old\\\" formControlName=\\\"school_logo_old\\\"\\n                ngModel={{getoneschool.school_logo}}>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" *ngIf=\\\"!router.stateService.params.id\\\">\\n            <label for=\\\"school_logo\\\" class=\\\"col-sm-2 control-label\\\">School Logo</label>\\n            <div class=\\\"col-sm-4\\\">\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" formControlName=\\\"school_logo\\\" id=\\\"school_logo\\\" />\\n            </div>\\n          </div>\\n          \\n          <!-- <div class=\\\"form-group\\\">\\n            <label for=\\\"standard_class\\\" class=\\\"col-sm-2 control-label\\\">\\n              Class\\n            </label>\\n            <div class=\\\"col-sm-6\\\">\\n                  <label class=\\\"checkbox-inline\\\" *ngFor=\\\"let standard_class_new of standard_class\\\" style=\\\"margin: 0px 10px 0px 0px;\\\">\\n                    <input type=\\\"checkbox\\\" value=\\\"{{standard_class_new._id}}\\\" formControlName=\\\"standard_class\\\" (change)=\\\"getSubjects();\\\" id=\\\"class_sub\\\"> {{standard_class_new.class_name}}\\n                  </label>\\n            </div>\\n          </div>\\n\\n          <div *ngIf=\\\"getsubtrue\\\">\\n            <div style=\\\"margin-bottom: 10px;\\\" *ngFor=\\\"let getsubjects_new of getsubjects; let i = index\\\">\\n                <label for=\\\"subjects\\\" class=\\\"col-sm-2 control-label\\\">Class {{getsubjects_new.class_name}} Subjects\\n                  </label>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <select class=\\\"form-control\\\" formControlName=\\\"subjects\\\" multiple (change)=\\\"setsubjects($event.target.value, getsubjects_new.class_id, i)\\\" id=\\\"sub\\\" ngModel>\\n                      <option *ngFor=\\\"let getsubjects_new_new of getsubjects_new.subjects; let j = index\\\" value=\\\"{{getsubjects_new_new.id}}\\\">{{getsubjects_new_new.subject_name}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n          </div> -->\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-2 col-sm-9\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{title_button}}</button>\\n              <a class=\\\"btn btn-danger\\\" uiSref=\\\"app.school\\\">Cancel</a>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </form>\\n    </div>\\n  </section>\\n</div>\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { UIRouter } from \"@uirouter/angular\";\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from '../common.service';\nimport { SchoolService } from '../services/school/school.service';\ndeclare const $ : any;\n\n@Component({\n  selector: 'app-form-school',\n  templateUrl: './form-school.component.html',\n  // styleUrls: ['./school.component.css']\n})\nexport class FormSchoolComponent implements OnInit {\n\n  rForm: FormGroup;\n  standard_class: any = [];\n  subjects: any;\n  getsubjects: any;\n  getsubtrue: any;\n  getoneschool: any = [];\n  title_button: any;\n  title_header: any;\n\n  constructor(private router: UIRouter, private el: ElementRef, private SchoolService: SchoolService, private commonServ: CommonService, private toastr: ToastrService, private fb: FormBuilder) {\n    this.rForm = fb.group({\n      'school_name': ['', Validators.required],\n      'school_mobile_number': ['', Validators.required],\n      'address': ['', Validators.required],\n      'pincode': ['', Validators.required],\n      'school_logo': [''],\n      'school_logo_old': [''],\n      'rewards_type': ['', Validators.required]\n    });\n   }\n\n  ngOnInit() {\n    if (this.commonServ.rootData === undefined || this.commonServ.rootData.currentUser === undefined) {\n      this.router.stateService.go('app.login');\n    }\n\n    this.title_header = 'Add School';\n    this.title_button = 'Submit';\n    if (this.router.stateService.params.id != undefined) {\n      this.title_header = 'Update School';\n      this.title_button = 'Update';\n      this.SchoolService.getOneSchool(this.router.stateService.params.id).subscribe((res: any) => {\n        this.getoneschool = res.data;\n      })\n    }\n  }\n\n  // getlatlong(value){\n  //   console.log(\"val\", value);\n  //   var condition =  { 'latlong': value };\n  //   this.commonServ.getLatlongFromAddress(condition).subscribe((res: any) => {\n  //     console.log(\"resss\", res);\n  //   })\n  // }\n\n  addSchool(rForm){\n    console.log(\"rForm\", rForm);\n    if(this.rForm.valid){\n    const inputEl: HTMLInputElement = this.el.nativeElement.querySelector('#school_logo');\n    const formData = new FormData();\n\n    formData.append('school_logo', inputEl.files.item(0));\n\n    // formData.append('profile_image', inputEl.files.item(0));\n    formData.append('school_logo_old', rForm['school_logo_old']);\n    formData.append('school_name', rForm['school_name']);\n    formData.append('school_mobile_number', rForm['school_mobile_number']);\n    formData.append('address', rForm['address']);\n    formData.append('pincode', rForm['pincode']);\n    formData.append('rewards_type', rForm['rewards_type']);\n\n    if(this.router.stateService.params.id != undefined){\n      formData.append('id', this.router.stateService.params.id);\n    }\n\n    if(this.router.stateService.params.id != undefined){\n      this.SchoolService.updateSchool(formData).subscribe((res: any) => {\n        if (res.status === 1) {\n          this.toastr.success('School Updated successfully');\n          this.router.stateService.go('app.school');\n        } else {\n          this.toastr.error('Error while updating your school');\n          this.router.stateService.go('app.school');\n        }\n      })\n    } else {\n      this.SchoolService.addSchool(formData).subscribe((res: any) => {\n        if (res.status === 1) {\n          this.toastr.success('School Added successfully');\n          this.router.stateService.go('app.school');\n        } else {\n          this.toastr.error('Error while adding your school');\n          this.router.stateService.go('app.school');\n        }\n      })\n    }\n\n    } else {\n      Object.keys(this.rForm.controls).forEach(field => {\n        const control = this.rForm.get(field);\n        control.markAsTouched({ onlySelf: true });\n      });\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaG9vbC9zY2hvb2wuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      Manage School\\n    </h1>\\n    <!-- <ol class=\\\"breadcrumb\\\">\\n      <li><a uiSref=\\\"app.home\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a>\\n      </li>\\n      <li class=\\\"active\\\">User</li>\\n    </ol> -->\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"box\\\">\\n      <div class=\\\"box-header\\\">\\n        <h3 class=\\\"box-title\\\">School Listing</h3>\\n        <a uiSref=\\\"app.school-add\\\" style=\\\"float:right;width:auto;margin:0px 1px;\\\"\\n          class=\\\"btn btn-block btn-primary btn-flat\\\">Add\\n          School</a>\\n      </div>\\n      <div class=\\\"box-body\\\">\\n        <div *ngIf=\\\"school.length === 0\\\">{{notfound}}</div>\\n        <div *ngIf=\\\"school.length > 0\\\">\\n            <table class=\\\"table table-bordered table-striped\\\">\\n                <thead>\\n                  <tr>\\n                    <th>School</th>\\n                    <th>Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let school_new of school | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\n                    <td>{{ school_new.school_name }}</td>\\n                    <td>\\n                      <a style=\\\"text-decoration: none; color: blue;\\\" uiSref=\\\"app.school-update\\\" [uiParams]=\\\"{ id : school_new._id }\\\" class=\\\"fa fa-edit\\\"></a>\\n                      <a style=\\\"margin-left: 10px; cursor: pointer; color: red;\\\" class=\\\"fa fa-trash\\\" (click)=\\\"deleteSchool(school_new._id)\\\"></a>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <br>\\n              <pagination-controls style=\\\"float: right;\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n    </div>\\n    </div>\\n  </section>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SchoolService } from '../services/school/school.service';\nimport { CommonService } from '../common.service';\nimport { UIRouter } from \"@uirouter/angular\";\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-school',\n  templateUrl: './school.component.html',\n  styleUrls: ['./school.component.css']\n})\nexport class SchoolComponent implements OnInit {\n\n  school: any = [];\n  notfound: any;\n\n  constructor(private router: UIRouter, private toastr: ToastrService, private SchoolService: SchoolService, private CommonService: CommonService) { }\n\n  ngOnInit() {\n    if (this.CommonService.rootData.currentUser != undefined) {\n      this.getSchoolList();\n    }\n  }\n\n  getSchoolList(){\n    this.SchoolService.getSchool().subscribe((res:any) => {\n      if(res.data.length > 0){\n        this.school = res.data;\n      // console.log(\"this\", this.users);\n      } else {\n        this.notfound = \"Record Not Found\";\n      }\n    })\n  }\n\n  deleteSchool(id){\n    this.SchoolService.deleteSchool(id).subscribe((res: any) => {\n      if(res.status == 1) {\n        this.getSchoolList();\n        this.toastr.success('School deleted successfully');\n      } else {\n        // console.log(res.message);\n        this.toastr.error('Error while deleting the school');\n      }\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SchoolComponent } from './school.component';\nimport { FormSchoolComponent } from './form-school.component';\nimport { UIRouterModule } from \"@uirouter/angular\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { Ng2StateDeclaration, Transition } from \"@uirouter/angular\";\n\nimport { EmptyModule } from '../empty/empty.module';\nimport { EmptyComponent } from '../empty/empty.component';\n\nlet APP_SUB_STATES: Ng2StateDeclaration[] = [\n  // A state for the 'app.contact' submodule.\n  {\n    name: \"app.school\",\n    url: \"/admins/school\",\n    views: {\n      \"content@\": { component: SchoolComponent },\n    },\n  },\n  {\n    name: \"app.school-add\",\n    url: \"/admins/school/add\",\n    views: {\n      \"content@\": { component: FormSchoolComponent },\n    },\n  },\n  {\n    name: \"app.school-update\",\n    url: \"/admins/school/update/:id\",\n    views: {\n      \"content@\": { component: FormSchoolComponent },\n    },\n  }\n];\n\n@NgModule({\n  declarations: [SchoolComponent, FormSchoolComponent],\n  imports: [\n    CommonModule,\n    EmptyModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UIRouterModule.forChild({ states: APP_SUB_STATES }),\n    NgxPaginationModule\n  ]\n})\nexport class SchoolModule { }\n"],"sourceRoot":""}